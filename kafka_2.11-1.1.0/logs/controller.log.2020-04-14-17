[2020-04-14 17:13:14,792] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-14 17:13:38,777] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 17:13:38,791] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2020-04-14 17:13:38,792] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2020-04-14 17:13:38,800] INFO [Controller id=0] Initialized controller epoch to 2 and zk version 1 (kafka.controller.KafkaController)
[2020-04-14 17:13:38,800] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2020-04-14 17:13:38,833] INFO [Controller id=0] Epoch incremented to 3 (kafka.controller.KafkaController)
[2020-04-14 17:13:38,833] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-14 17:13:38,843] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-14 17:13:38,848] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-14 17:13:38,851] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-14 17:13:38,902] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-14 17:13:38,928] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-14 17:13:38,943] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-14 17:13:38,945] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-04-14 17:13:38,946] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-14 17:13:38,947] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-14 17:13:38,947] INFO [Controller id=0] Current list of topics in the cluster: Set(response_topic, passport, account, profile) (kafka.controller.KafkaController)
[2020-04-14 17:13:38,948] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-14 17:13:38,952] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-14 17:13:38,953] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-14 17:13:38,955] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-14 17:13:38,957] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-14 17:13:38,977] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2020-04-14 17:13:38,986] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2020-04-14 17:13:38,987] INFO [RequestSendThread controllerId=0] Controller 0 connected to sarthaks-mbp.lan:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 17:13:39,017] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=account,Partition=0,Replica=0] -> OnlineReplica, [Topic=response_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=passport,Partition=0,Replica=0] -> OnlineReplica, [Topic=profile,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2020-04-14 17:13:39,017] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2020-04-14 17:13:39,020] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2020-04-14 17:13:39,023] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(passport-0 -> OnlinePartition, profile-0 -> OnlinePartition, response_topic-0 -> OnlinePartition, account-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2020-04-14 17:13:39,023] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-04-14 17:13:39,032] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-14 17:13:39,032] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-14 17:13:39,034] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-14 17:13:39,035] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-14 17:13:39,036] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-04-14 17:13:39,045] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-14 17:13:44,053] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 17:13:44,055] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(passport-0 -> Vector(0), profile-0 -> Vector(0), response_topic-0 -> Vector(0), account-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-14 17:13:44,058] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 17:13:44,059] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 17:14:05,457] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-04-14 17:14:05,457] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-04-14 17:14:05,458] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-04-14 17:14:05,461] TRACE [Controller id=0] All leaders = passport-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),profile-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),response_topic-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),account-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2020-04-14 17:14:06,286] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 17:14:06,286] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 17:14:06,287] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 17:14:06,287] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-04-14 17:14:06,288] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-14 17:14:06,291] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2020-04-14 17:14:06,292] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2020-04-14 17:14:06,292] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-14 17:14:06,293] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-14 17:14:06,293] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-14 17:14:06,294] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-04-14 17:15:26,650] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 17:15:26,679] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2020-04-14 17:15:26,679] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2020-04-14 17:15:26,682] INFO [Controller id=0] Initialized controller epoch to 3 and zk version 2 (kafka.controller.KafkaController)
[2020-04-14 17:15:26,682] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2020-04-14 17:15:26,715] INFO [Controller id=0] Epoch incremented to 4 (kafka.controller.KafkaController)
[2020-04-14 17:15:26,715] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-14 17:15:26,719] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-14 17:15:26,726] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-14 17:15:26,731] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-14 17:15:26,763] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-14 17:15:26,786] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-14 17:15:26,794] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-14 17:15:26,796] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-04-14 17:15:26,797] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-14 17:15:26,798] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-14 17:15:26,799] INFO [Controller id=0] Current list of topics in the cluster: Set(response_topic, passport, account, profile) (kafka.controller.KafkaController)
[2020-04-14 17:15:26,799] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-14 17:15:26,807] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-14 17:15:26,808] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-14 17:15:26,808] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-14 17:15:26,810] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-14 17:15:26,831] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2020-04-14 17:15:26,837] INFO [RequestSendThread controllerId=0] Controller 0 connected to sarthaks-mbp.lan:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 17:15:26,844] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2020-04-14 17:15:26,916] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=account,Partition=0,Replica=0] -> OnlineReplica, [Topic=response_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=passport,Partition=0,Replica=0] -> OnlineReplica, [Topic=profile,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2020-04-14 17:15:26,917] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2020-04-14 17:15:26,927] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2020-04-14 17:15:26,930] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(passport-0 -> OnlinePartition, profile-0 -> OnlinePartition, response_topic-0 -> OnlinePartition, account-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2020-04-14 17:15:26,931] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2020-04-14 17:15:26,936] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-14 17:15:26,936] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-14 17:15:26,938] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-14 17:15:26,940] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-14 17:15:26,940] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-04-14 17:15:26,952] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-14 17:15:31,957] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 17:15:31,960] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(passport-0 -> Vector(0), profile-0 -> Vector(0), response_topic-0 -> Vector(0), account-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-14 17:15:31,962] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 17:15:31,962] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 17:17:24,034] DEBUG [Controller id=0] Delete topics listener fired for topics account to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:17:24,034] INFO [Controller id=0] Starting topic deletion for topics account (kafka.controller.KafkaController)
[2020-04-14 17:17:24,037] INFO [Topic Deletion Manager 0], Handling deletion for topics account (kafka.controller.TopicDeletionManager)
[2020-04-14 17:17:24,041] INFO [Topic Deletion Manager 0], Deletion of topic account (re)started (kafka.controller.TopicDeletionManager)
[2020-04-14 17:17:24,042] INFO [Topic Deletion Manager 0], Topic deletion callback for account (kafka.controller.TopicDeletionManager)
[2020-04-14 17:17:24,045] INFO [Topic Deletion Manager 0], Partition deletion callback for account-0 (kafka.controller.TopicDeletionManager)
[2020-04-14 17:17:24,065] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:17:24,066] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=account,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:17:24,067] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=account,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:17:24,069] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=account,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:17:24,069] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:17:24,096] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@11656b67 (kafka.controller.KafkaController)
[2020-04-14 17:17:24,098] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=account,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:17:24,100] INFO [Topic Deletion Manager 0], Handling deletion for topics account (kafka.controller.TopicDeletionManager)
[2020-04-14 17:17:24,126] INFO [Topic Deletion Manager 0], Deletion of topic account successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-14 17:17:24,128] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-14 17:17:24,129] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:18:51,021] DEBUG [Controller id=0] Delete topics listener fired for topics passport to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:18:51,021] INFO [Controller id=0] Starting topic deletion for topics passport (kafka.controller.KafkaController)
[2020-04-14 17:18:51,022] INFO [Topic Deletion Manager 0], Handling deletion for topics passport (kafka.controller.TopicDeletionManager)
[2020-04-14 17:18:51,022] INFO [Topic Deletion Manager 0], Deletion of topic passport (re)started (kafka.controller.TopicDeletionManager)
[2020-04-14 17:18:51,022] INFO [Topic Deletion Manager 0], Topic deletion callback for passport (kafka.controller.TopicDeletionManager)
[2020-04-14 17:18:51,026] INFO [Topic Deletion Manager 0], Partition deletion callback for passport-0 (kafka.controller.TopicDeletionManager)
[2020-04-14 17:18:51,032] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:18:51,032] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=passport,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:18:51,032] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=passport,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:18:51,033] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=passport,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:18:51,033] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:18:51,046] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1deb42ae (kafka.controller.KafkaController)
[2020-04-14 17:18:51,046] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=passport,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:18:51,046] INFO [Topic Deletion Manager 0], Handling deletion for topics passport (kafka.controller.TopicDeletionManager)
[2020-04-14 17:18:51,057] INFO [Topic Deletion Manager 0], Deletion of topic passport successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-14 17:18:51,058] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-14 17:18:51,059] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:19:08,672] DEBUG [Controller id=0] Delete topics listener fired for topics profile to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:19:08,673] INFO [Controller id=0] Starting topic deletion for topics profile (kafka.controller.KafkaController)
[2020-04-14 17:19:08,673] INFO [Topic Deletion Manager 0], Handling deletion for topics profile (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:08,673] INFO [Topic Deletion Manager 0], Deletion of topic profile (re)started (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:08,673] INFO [Topic Deletion Manager 0], Topic deletion callback for profile (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:08,674] INFO [Topic Deletion Manager 0], Partition deletion callback for profile-0 (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:08,679] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:19:08,679] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=profile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:19:08,679] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=profile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:08,679] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=profile,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:19:08,679] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:19:08,693] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@a0e7a91 (kafka.controller.KafkaController)
[2020-04-14 17:19:08,693] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=profile,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:08,694] INFO [Topic Deletion Manager 0], Handling deletion for topics profile (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:08,705] INFO [Topic Deletion Manager 0], Deletion of topic profile successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:08,706] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-14 17:19:08,707] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:19:30,988] DEBUG [Controller id=0] Delete topics listener fired for topics response_topic to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:19:30,988] INFO [Controller id=0] Starting topic deletion for topics response_topic (kafka.controller.KafkaController)
[2020-04-14 17:19:30,988] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:30,988] INFO [Topic Deletion Manager 0], Deletion of topic response_topic (re)started (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:30,988] INFO [Topic Deletion Manager 0], Topic deletion callback for response_topic (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:30,989] INFO [Topic Deletion Manager 0], Partition deletion callback for response_topic-0 (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:30,995] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:19:30,995] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:19:30,995] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:30,996] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:19:30,996] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:19:31,009] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@5f76dfda (kafka.controller.KafkaController)
[2020-04-14 17:19:31,009] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:31,009] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:31,024] INFO [Topic Deletion Manager 0], Deletion of topic response_topic successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-14 17:19:31,026] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-14 17:19:31,027] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:20:31,975] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 17:20:31,976] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-14 17:20:41,527] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-04-14 17:20:41,528] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-04-14 17:20:41,533] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-04-14 17:20:41,535] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2020-04-14 17:20:42,724] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 17:20:42,724] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 17:20:42,724] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 17:20:42,725] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-04-14 17:20:42,725] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-14 17:20:42,727] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2020-04-14 17:20:42,728] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2020-04-14 17:20:42,728] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-14 17:20:42,728] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-14 17:20:42,728] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-14 17:20:42,730] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-04-14 17:21:23,657] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-14 17:21:42,152] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 17:21:42,169] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2020-04-14 17:21:42,169] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2020-04-14 17:21:42,172] INFO [Controller id=0] Initialized controller epoch to 4 and zk version 3 (kafka.controller.KafkaController)
[2020-04-14 17:21:42,173] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2020-04-14 17:21:42,186] INFO [Controller id=0] Epoch incremented to 5 (kafka.controller.KafkaController)
[2020-04-14 17:21:42,186] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-14 17:21:42,190] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-14 17:21:42,195] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-14 17:21:42,198] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-14 17:21:42,232] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-14 17:21:42,238] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-14 17:21:42,256] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-14 17:21:42,258] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-04-14 17:21:42,260] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-14 17:21:42,260] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-14 17:21:42,261] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-14 17:21:42,261] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-14 17:21:42,268] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-14 17:21:42,269] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-14 17:21:42,269] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-14 17:21:42,270] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-14 17:21:42,279] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2020-04-14 17:21:42,280] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2020-04-14 17:21:42,286] INFO [RequestSendThread controllerId=0] Controller 0 connected to sarthaks-mbp.lan:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 17:21:42,288] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2020-04-14 17:21:42,289] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2020-04-14 17:21:42,289] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2020-04-14 17:21:42,293] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2020-04-14 17:21:42,297] INFO [Controller id=0] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2020-04-14 17:21:42,303] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-14 17:21:42,303] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-14 17:21:42,304] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-14 17:21:42,304] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-14 17:21:42,305] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-04-14 17:21:42,311] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-14 17:21:47,318] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 17:21:47,321] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-14 17:22:30,489] INFO [Controller id=0] New topics: [Set(accounts)], deleted topics: [Set()], new partition replica assignment [Map(accounts-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-14 17:22:30,493] INFO [Controller id=0] New partition creation callback for accounts-0 (kafka.controller.KafkaController)
[2020-04-14 17:22:48,774] INFO [Controller id=0] New topics: [Set(passport)], deleted topics: [Set()], new partition replica assignment [Map(passport-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-14 17:22:48,774] INFO [Controller id=0] New partition creation callback for passport-0 (kafka.controller.KafkaController)
[2020-04-14 17:23:09,923] INFO [Controller id=0] New topics: [Set(sellerProfileService)], deleted topics: [Set()], new partition replica assignment [Map(sellerProfileService-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-14 17:23:09,923] INFO [Controller id=0] New partition creation callback for sellerProfileService-0 (kafka.controller.KafkaController)
[2020-04-14 17:23:43,968] INFO [Controller id=0] New topics: [Set(response_topic)], deleted topics: [Set()], new partition replica assignment [Map(response_topic-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-14 17:23:43,972] INFO [Controller id=0] New partition creation callback for response_topic-0 (kafka.controller.KafkaController)
[2020-04-14 17:26:44,136] INFO [Controller id=0] New topics: [Set(response_topic_amazon)], deleted topics: [Set()], new partition replica assignment [Map(response_topic_amazon-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-14 17:26:44,136] INFO [Controller id=0] New partition creation callback for response_topic_amazon-0 (kafka.controller.KafkaController)
[2020-04-14 17:26:47,334] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 17:26:47,334] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(sellerProfileService-0 -> Vector(0), passport-0 -> Vector(0), response_topic_amazon-0 -> Vector(0), response_topic-0 -> Vector(0), accounts-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-14 17:26:47,338] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 17:26:47,340] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 17:29:42,925] DEBUG [Controller id=0] Delete topics listener fired for topics response_topic to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:29:42,926] INFO [Controller id=0] Starting topic deletion for topics response_topic (kafka.controller.KafkaController)
[2020-04-14 17:29:42,929] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:42,932] INFO [Topic Deletion Manager 0], Deletion of topic response_topic (re)started (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:42,933] INFO [Topic Deletion Manager 0], Topic deletion callback for response_topic (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:42,937] INFO [Topic Deletion Manager 0], Partition deletion callback for response_topic-0 (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:42,956] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:29:42,956] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:29:42,958] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:42,960] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:29:42,960] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:29:42,999] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@5c6ce894 (kafka.controller.KafkaController)
[2020-04-14 17:29:43,012] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=response_topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:43,023] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:43,052] INFO [Topic Deletion Manager 0], Deletion of topic response_topic successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:43,054] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-14 17:29:43,055] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:29:58,947] DEBUG [Controller id=0] Delete topics listener fired for topics response_topic_amazon to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:29:58,948] INFO [Controller id=0] Starting topic deletion for topics response_topic_amazon (kafka.controller.KafkaController)
[2020-04-14 17:29:58,948] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic_amazon (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:58,948] INFO [Topic Deletion Manager 0], Deletion of topic response_topic_amazon (re)started (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:58,948] INFO [Topic Deletion Manager 0], Topic deletion callback for response_topic_amazon (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:58,949] INFO [Topic Deletion Manager 0], Partition deletion callback for response_topic_amazon-0 (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:58,955] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:29:58,955] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=response_topic_amazon,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:29:58,955] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=response_topic_amazon,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:58,956] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=response_topic_amazon,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:29:58,956] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 17:29:58,971] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@24c95c15 (kafka.controller.KafkaController)
[2020-04-14 17:29:58,971] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=response_topic_amazon,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:58,971] INFO [Topic Deletion Manager 0], Handling deletion for topics response_topic_amazon (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:58,981] INFO [Topic Deletion Manager 0], Deletion of topic response_topic_amazon successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-14 17:29:58,981] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-14 17:29:58,982] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-14 17:31:40,496] INFO [Controller id=0] New topics: [Set(response_topic_amazon)], deleted topics: [Set()], new partition replica assignment [Map(response_topic_amazon-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-14 17:31:40,496] INFO [Controller id=0] New partition creation callback for response_topic_amazon-0 (kafka.controller.KafkaController)
[2020-04-14 17:31:47,360] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 17:31:47,360] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(sellerProfileService-0 -> Vector(0), passport-0 -> Vector(0), response_topic_amazon-0 -> Vector(0), accounts-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-14 17:31:47,360] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 17:31:47,361] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 17:36:47,374] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 17:36:47,377] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(sellerProfileService-0 -> Vector(0), passport-0 -> Vector(0), response_topic_amazon-0 -> Vector(0), accounts-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-14 17:36:47,378] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 17:36:47,378] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 17:41:47,394] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 17:41:47,396] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(sellerProfileService-0 -> Vector(0), passport-0 -> Vector(0), response_topic_amazon-0 -> Vector(0), accounts-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-14 17:41:47,396] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 17:41:47,396] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 17:46:47,422] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 17:46:47,423] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(sellerProfileService-0 -> Vector(0), passport-0 -> Vector(0), response_topic_amazon-0 -> Vector(0), accounts-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-14 17:46:47,423] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 17:46:47,424] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 17:51:47,439] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 17:51:47,440] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(sellerProfileService-0 -> Vector(0), passport-0 -> Vector(0), response_topic_amazon-0 -> Vector(0), accounts-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-14 17:51:47,441] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 17:51:47,441] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 17:56:47,460] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 17:56:47,462] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(sellerProfileService-0 -> Vector(0), passport-0 -> Vector(0), response_topic_amazon-0 -> Vector(0), accounts-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-14 17:56:47,463] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 17:56:47,463] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
